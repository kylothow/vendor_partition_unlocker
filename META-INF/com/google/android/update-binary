#!/sbin/sh
# AnyKernel2 Backend
# osm0sis @ xda-developers
#
# Vendor Partition Unlocker
# codeworkx @ xda-developers (original binary and scripts)
# kylothow @ xda-developers (standalone flashable zip)

OUTFD=/proc/self/fd/$2;
ZIPFILE="$3";
VENDOR=/dev/block/bootdevice/by-name/vendor;
BLOCKDEV=/dev/block/sdf;

ui_print() {
  until [ ! "$1" ]; do
    echo -e "ui_print $1\nui_print" > $OUTFD;
    shift;
  done;
}
show_progress() { echo "progress $1 $2" > $OUTFD; }
file_getprop() { grep "^$2=" "$1" | cut -d= -f2; }
if [ ! "$(getprop 2>/dev/null)" ]; then
  getprop() {
    local propval="$(file_getprop /default.prop $1 2>/dev/null)";
    test "$propval" || local propval="$(file_getprop /system/build.prop $1 2>/dev/null)";
    test "$propval" && echo "$propval" || echo "";
  }
fi;
cleanup() { rm -rf /tmp/vendor_unlocker; }
abort() {
  ui_print "$*";
  ui_print " ";
  cleanup;
  umount /system;
  exit 1;
}
safe_runcmd() {
 cmd=$@;
 $cmd;
 error=$?;
 if [ "$error" != 0 ]; then
    ui_print "Error when executing command: '$cmd'. Aborting...";
    abort "Error Code: $error";
 fi;
}

show_progress 1.34 4;
ui_print " ";
cleanup;
mkdir /tmp/vendor_unlocker;
cd /tmp/vendor_unlocker;
unzip -o "$ZIPFILE";
if [ $? != 0 -o -z "$(ls /tmp/vendor_unlocker/tools)" ]; then
  abort "Unzip failed. Aborting...";
fi;
sgdisk=/tmp/vendor_unlocker/tools/sgdisk-op5;
chmod 755 $sgdisk;

ui_print "Vendor Partition Unlocker by kylothow @ xda-developers";
ui_print " ";
ui_print "Credits:"
ui_print "  AnyKernel2 Backend by osm0sis @ xda-developers";
ui_print "  sgdisk-op5 by codeworkx @ xda-developers";
ui_print " ";
umount /system 2>/dev/null;
mount -o ro -t auto /system;

ui_print "Checking device...";
for i in 1 2 3 4; do
  testname="$(file_getprop /tmp/vendor_unlocker/assert.prop device.name$i)";
  if [ "$(getprop ro.product.device)" == "$testname" -o "$(getprop ro.build.product)" == "$testname" ]; then
    ui_print "$testname";
    match=1;
  fi;
done;
ui_print " ";
if [ "$match" != 1 ]; then
  abort "Unsupported device. Aborting...";
fi;

if [ ! -e "$VENDOR" ]; then
  ui_print "Vendor partition does not exist.";
  ui_print " ";
  ui_print "Using 'last_parti' as 'vendor'...";
  ui_print "> Changing typecode to '8300 Linux filesystem'";
  command="$sgdisk --typecode=6:8300 $BLOCKDEV";
  safe_runcmd $command;
  ui_print "> Changing name to 'vendor'";
  command="$sgdisk --change-name=6:vendor $BLOCKDEV";
  safe_runcmd $command;
  ui_print " ";
  ui_print "Vendor partition created!";
else
  ui_print "Found vendor partition. Good!";
fi;

cleanup;

umount /system;
ui_print " ";

exit 0;
